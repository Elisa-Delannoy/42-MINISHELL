

void	exec_all(t_var *var, t_exec *exec, char **env)
{
	pid_t	pid;
	void	(*builtins)(t_var *, char **);

	pid = fork();
	if (pid == 0)
	{
		if (exec->input != 0)
		{
			write(1, "dans input\n", 12);
			dup2(exec->input, STDIN_FILENO);
			close (exec->input);
		}
		if (exec->output != 1)
		{
			write(1, "dans output\n", 12);
			dup2(exec->output, STDOUT_FILENO);
			close (exec->output);
		}
		builtins = ft_cmd(exec->cmd);
		if (builtins == NULL)
			execve(exec->path, exec->cmd, env);
		else
			builtins(var, exec->cmd);
		exit(0);
	}
}

void	setup_pid(t_var *var, t_exec *exec)
{
	int		pipefd[2];
	int		i;
	char	**env;
	int		prevpipe;

	i = 0;
	prevpipe = 0;
	env = do_env(var->env);
	while (i < var->nbcmd)
	{
		if (pipe(pipefd) == -1)
			return (ft_putstr_fd("Error pipe.", 2));
		exec->output = pipefd[1];
		if (i == var->nbcmd)
			exec->output = 1;
		
		exec_all(var, exec, env);
		close(pipefd[1]);
		close(exec->input);
		exec = exec->next;
		exec->input = pipefd[0];
		
		i++;
	}
	free (env);
	waitpid(-1, 0, 0);
	return ;
}